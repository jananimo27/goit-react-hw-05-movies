{"version":3,"file":"static/js/106.ea4b739a.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/CastListItem/CastListItem.module.css?e493","components/CastListItem/CastListItem.jsx","webpack://react-homework-template/./src/components/CastList/CastList.module.css?59ac","components/CastList/CastList.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = 'b86981a07e5296001ff10a61d56b5942';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n};\r\n\r\nexport const fetchTrendingMovies = async () => {\r\n  const response = await axios.get(`trending/movie/day`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const fetchMovieByQuery = async movieName => {\r\n  const response = await axios.get(`search/movie?query=${movieName}`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const fetchMovieDetails = async movieId => {\r\n  const response = await axios.get(`movie/${movieId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const fetchMovieCast = async movieId => {\r\n  const response = await axios.get(`movie/${movieId}/credits?`);\r\n  return response.data.cast;\r\n};\r\n\r\nexport const fetchMovieReviews = async movieId => {\r\n  const response = await axios.get(`movie/${movieId}/reviews?`);\r\n  return response.data.results;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"castListItem\":\"CastListItem_castListItem__sL2hq\",\"castName\":\"CastListItem_castName__fxlzX\",\"castImage\":\"CastListItem_castImage__r18TI\"};","import PropTypes from 'prop-types';\r\nimport css from './CastListItem.module.css';\r\n\r\nconst CastListItem = ({ profilePath, originalName, name }) => {\r\n  return (\r\n    <li className={css.castListItem}>\r\n      <img\r\n        className={css.castImage}\r\n        src={\r\n          profilePath\r\n            ? `https://image.tmdb.org/t/p/w300${profilePath}`\r\n            : `https://dummyimage.com/150x225/969696/e0e0e0.jpg&text=No+image`\r\n        }\r\n        alt={originalName}\r\n      />\r\n      <p className={css.castName}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nCastListItem.propTypes = {\r\n  profilePath: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  originalName: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CastListItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastList_castList__J8lTN\"};","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchMovieCast } from 'api/api';\r\nimport CastListItem from '../CastListItem/CastListItem';\r\nimport css from './CastList.module.css';\r\nimport Loader from '../Loader/Loader';\r\n\r\nconst CastList = () => {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getCast = async () => {\r\n      try {\r\n        const castData = await fetchMovieCast(movieId);\r\n        setCast(castData);\r\n      } catch (error) {\r\n        console.error('Error fetching cast data:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    void getCast();\r\n  }, [movieId]);\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <ul className={css.castList}>\r\n      {cast.map(actor => (\r\n        <CastListItem\r\n          key={actor.id}\r\n          profilePath={actor.profile_path}\r\n          originalName={actor.original_name}\r\n          name={actor.name}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CastList;\r\n"],"names":["axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByQuery","_ref2","_callee2","movieName","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","profilePath","originalName","name","_jsxs","className","css","children","_jsx","src","alt","useParams","_useState","useState","_useState2","_slicedToArray","setCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","getCast","castData","t0","console","error","finish","Loader","map","actor","CastListItem","profile_path","original_name","id"],"sourceRoot":""}